> Pre of `SafeMath.safeAdd(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 2118
---> DONE <---
> Post of `SafeMath.safeAdd(uint256,uint256)` is [33mFalse[0m
[['SafeMath.safeAdd(uint256,uint256)', 'SafeMath.safeMult(uint256,uint256)', 'BAToken.createTokens()']]
> Post of `SafeMath.safeAdd(uint256,uint256)` is [33mAnd(0 <= y, 0 <= x, r == x + y)[0m
> Query: 1
> Duration: 3202
---> DONE <---
> Pre of `StandardToken.allowance(address,address)` is [33mTrue[0m
[]
> Query: 0
> Duration: 3767
---> DONE <---
> Post of `StandardToken.allowance(address,address)` is [33mFalse[0m
[['StandardToken.allowance(address,address)']]
> Post of `StandardToken.allowance(address,address)` is [33mremaining == allowed[_owner][_spender][0m
> Query: 1
> Duration: 4320
---> DONE <---
> Pre of `StandardToken.transfer(address,uint256)` is [33mTrue[0m
[['StandardToken.transfer(address,uint256)']]
> Pre of `StandardToken.transfer(address,uint256)` is [33mOr(And(balances[msg.sender] >= _value,
       Not(_value <= 0),
       Not(msg.sender == _to)),
   0 == _value)[0m
> Query: 1
> Duration: 7672
---> DONE <---
> Post of `StandardToken.transfer(address,uint256)` is [33mFalse[0m
[['StandardToken.transfer(address,uint256)']]
> Post of `StandardToken.transfer(address,uint256)` is [33mAnd(Or(And(success,
           Not(_value <= 0),
           old_balances[msg.sender] >= _value,
           Or(And(msg.sender == _to,
                  balances[msg.sender] ==
                  old_balances[msg.sender]),
              And(balances[msg.sender] ==
                  old_balances[msg.sender] + -1*_value,
                  balances[_to] ==
                  old_balances[_to] + _value,
                  Not(_to == msg.sender)))),
       And(_value <= 0,
           balances[msg.sender] >= _value,
           0 <= _value,
           Not(success))),
    Not(msg.sender == _to))[0m
> Query: 1
> Duration: 11454
---> DONE <---
> Pre of `BAToken.refund()` is [33mTrue[0m
[['SafeMath.safeSubtract(uint256,uint256)', 'BAToken.refund()']]
> Pre of `BAToken.refund()` is [33mtotalSupply >= balances[msg.sender][0m
> Query: 1
> Duration: 21541
---> DONE <---
> Post of `BAToken.refund()` is [33mFalse[0m
[['SafeMath.safeSubtract(uint256,uint256)', 'BAToken.refund()']]
> Post of `BAToken.refund()` is [33mAnd(balances[msg.sender] == 0,
    Not(msg.sender == batFundDeposit),
    Not(old_totalSupply >= tokenCreationMin),
    Not(block.number <= fundingEndBlock),
    0 <= old_totalSupply,
    0 <= fundingEndBlock,
    Not(old_totalSupply <= old_balances[msg.sender]),
    Not(old_balances[msg.sender] <= 0),
    totalSupply ==
    old_totalSupply + -1*old_balances[msg.sender],
    Not(isFinalized),
    0 <= tokenExchangeRate)[0m
> Query: 1
> Duration: 32110
---> DONE <---
> Pre of `StandardToken.approve(address,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 32534
---> DONE <---
> Post of `StandardToken.approve(address,uint256)` is [33mFalse[0m
[['StandardToken.approve(address,uint256)']]
> Post of `StandardToken.approve(address,uint256)` is [33mAnd(success,
    allowed[msg.sender][_spender] == _value,
    0 <= _value)[0m
> Query: 1
> Duration: 33046
---> DONE <---
> Pre of `BAToken.finalize()` is [33mTrue[0m
[]
> Query: 0
> Duration: 33536
---> DONE <---
> Post of `BAToken.finalize()` is [33mFalse[0m
[['BAToken.finalize()']]
> Post of `BAToken.finalize()` is [33mAnd(isFinalized,
    tokenCreationMin <= totalSupply,
    msg.sender == ethFundDeposit,
    0 <= totalSupply,
    0 <= tokenCreationMin,
    0 <= tokenCreationCap,
    0 <= fundingEndBlock,
    Or(Not(block.number <= fundingEndBlock),
       totalSupply == tokenCreationCap),
    Not(old_isFinalized))[0m
> Query: 1
> Duration: 34193
---> DONE <---
> Pre of `SafeMath.safeMult(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 34604
---> DONE <---
> Post of `SafeMath.safeMult(uint256,uint256)` is [33mFalse[0m
[['SafeMath.safeAdd(uint256,uint256)', 'SafeMath.safeMult(uint256,uint256)', 'BAToken.createTokens()']]
> Post of `SafeMath.safeMult(uint256,uint256)` is [33mAnd(0 <= y, 0 <= x, r == x*y)[0m
> Query: 1
> Duration: 35413
---> DONE <---
> Pre of `StandardToken.balanceOf(address)` is [33mTrue[0m
[]
> Query: 0
> Duration: 35823
---> DONE <---
> Post of `StandardToken.balanceOf(address)` is [33mFalse[0m
[['StandardToken.balanceOf(address)']]
> Post of `StandardToken.balanceOf(address)` is [33mbalance == balances[_owner][0m
> Query: 1
> Duration: 36429
---> DONE <---
> Pre of `BAToken.BAToken(address,address,uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 36864
---> DONE <---
> Post of `BAToken.BAToken(address,address,uint256,uint256)` is [33mFalse[0m
[['BAToken.BAToken(address,address,uint256,uint256)']]
> Post of `BAToken.BAToken(address,address,uint256,uint256)` is [33mAnd(balances[batFundDeposit] == batFund,
    totalSupply == batFund,
    fundingEndBlock == _fundingEndBlock,
    fundingStartBlock == _fundingStartBlock,
    batFundDeposit == _batFundDeposit,
    ethFundDeposit == _ethFundDeposit,
    0 <= batFund,
    0 <= _fundingEndBlock,
    0 <= _fundingStartBlock,
    Not(isFinalized))[0m
> Query: 1
> Duration: 39656
---> DONE <---
> Pre of `SafeMath.safeSubtract(uint256,uint256)` is [33mTrue[0m
[['SafeMath.safeSubtract(uint256,uint256)', 'BAToken.refund()']]
> Pre of `SafeMath.safeSubtract(uint256,uint256)` is [33mx >= y[0m
> Query: 1
> Duration: 40736
---> DONE <---
> Post of `SafeMath.safeSubtract(uint256,uint256)` is [33mFalse[0m
[['SafeMath.safeSubtract(uint256,uint256)', 'BAToken.refund()']]
> Post of `SafeMath.safeSubtract(uint256,uint256)` is [33mAnd(0 <= y, 0 <= x, x >= y, r == x + -1*y)[0m
> Query: 1
> Duration: 41750
---> DONE <---
> Pre of `BAToken.createTokens()` is [33mTrue[0m
[]
> Query: 0
> Duration: 42159
---> DONE <---
> Post of `BAToken.createTokens()` is [33mFalse[0m
[['SafeMath.safeAdd(uint256,uint256)', 'SafeMath.safeMult(uint256,uint256)', 'BAToken.createTokens()']]
> Post of `BAToken.createTokens()` is [33mAnd(block.number <= fundingEndBlock,
    fundingStartBlock <= block.number,
    0 <= old_totalSupply,
    0 <= tokenExchangeRate,
    0 <= tokenCreationCap,
    0 <= fundingStartBlock,
    msg.value*tokenExchangeRate + old_totalSupply <=
    tokenCreationCap,
    Not(msg.value <= 0),
    totalSupply <= tokenCreationCap,
    totalSupply ==
    old_totalSupply + msg.value*tokenExchangeRate,
    balances[msg.sender] ==
    old_balances[msg.sender] + msg.value*tokenExchangeRate,
    Not(isFinalized))[0m
> Query: 1
> Duration: 52205
---> DONE <---
> Pre of `StandardToken.transferFrom(address,address,uint256)` is [33mTrue[0m
[['StandardToken.transferFrom(address,address,uint256)']]
> Pre of `StandardToken.transferFrom(address,address,uint256)` is [33mOr(And(balances[_from] >= _value,
       allowed[_from][msg.sender] >= _value,
       Not(_value <= 0),
       Not(_to == _from)),
   _value == 0)[0m
> Query: 1
> Duration: 57590
---> DONE <---
> Post of `StandardToken.transferFrom(address,address,uint256)` is [33mFalse[0m
[['StandardToken.transferFrom(address,address,uint256)']]
> Post of `StandardToken.transferFrom(address,address,uint256)` is [33mAnd(success,
    allowed[_from][msg.sender] ==
    old_allowed[_from][msg.sender] + -1*_value,
    Not(_value <= 0),
    old_allowed[_from][msg.sender] >= _value,
    old_balances[_from] >= _value,
    Not(_to == _from),
    Or(And(balances[_from] == old_balances[_to],
           _to == _from),
       And(balances[_to] == old_balances[_to] + _value,
           Not(_to == _from),
           balances[_from] ==
           old_balances[_from] + -1*_value)))[0m
> Query: 1
> Duration: 62913
---> DONE <---
