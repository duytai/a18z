> Pre of `ERC20.allowance(address,address)` is [33mTrue[0m
[]
> Query: 0
> Duration: 3162
---> DONE <---
> Post of `ERC20.allowance(address,address)` is [33mFalse[0m
[['ERC20.allowance(address,address)']]
> Post of `ERC20.allowance(address,address)` is [33mr == _allowances[owner][spender][0m
> Query: 1
> Duration: 4173
---> DONE <---
> Pre of `SafeMath.mod(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 5331
---> DONE <---
> Post of `SafeMath.mod(uint256,uint256)` is [33mFalse[0m
[['SafeMath.mod(uint256,uint256)']]
> Post of `SafeMath.mod(uint256,uint256)` is [33mAnd(r == a%b, 0 <= b, 0 <= a, Not(0 == b))[0m
> Query: 1
> Duration: 6571
---> DONE <---
> Pre of `TokenMintERC20Token.name()` is [33mTrue[0m
[]
> Query: 0
> Duration: 7771
---> DONE <---
> Post of `TokenMintERC20Token.name()` is [33mFalse[0m
[['TokenMintERC20Token.name()']]
> Post of `TokenMintERC20Token.name()` is [33m<null> == _name[0m
> Query: 1
> Duration: 8788
---> DONE <---
> Pre of `ERC20.transfer(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20.transfer(address,uint256)` is [33mAnd(_balances[msg.sender] >= amount,
    Not(msg.sender == recipient),
    Not(0 == msg.sender),
    Not(0 == recipient))[0m
> Query: 1
> Duration: 15413
---> DONE <---
> Post of `ERC20.transfer(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20.transfer(address,uint256)` is [33mAnd(<null>,
    _balances[recipient] ==
    old__balances[recipient] + amount,
    _balances[msg.sender] ==
    old__balances[msg.sender] + -1*amount,
    old__balances[msg.sender] >= amount,
    0 <= amount,
    Not(0 == recipient),
    Not(0 == msg.sender),
    Not(msg.sender == recipient))[0m
> Query: 1
> Duration: 22982
---> DONE <---
> Pre of `ERC20._mint(address,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 23657
---> DONE <---
> Post of `ERC20._mint(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20._mint(address,uint256)` is [33mAnd(Not(0 == account),
    0 <= old__totalSupply,
    0 <= amount,
    _totalSupply == old__totalSupply + amount,
    _balances[account] == old__balances[account] + amount)[0m
> Query: 1
> Duration: 28249
---> DONE <---
> Pre of `TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)` is [33mNot(0 == tokenOwnerAddress)[0m
> Query: 1
> Duration: 30387
---> DONE <---
> Post of `TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)` is [33mAnd(_balances[tokenOwnerAddress] ==
    old__balances[tokenOwnerAddress] + totalSupply,
    _totalSupply == old__totalSupply + totalSupply,
    _decimals == decimals,
    0 <= totalSupply,
    0 <= decimals,
    Not(0 == tokenOwnerAddress),
    _symbol == symbol,
    _name == name)[0m
> Query: 1
> Duration: 34100
---> DONE <---
> Pre of `SafeMath.mul(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 34775
---> DONE <---
> Post of `SafeMath.mul(uint256,uint256)` is [33mFalse[0m
[['SafeMath.mul(uint256,uint256)']]
> Post of `SafeMath.mul(uint256,uint256)` is [33mAnd(Or(And(0 == r, 0 == a),
       And(0 <= a, r == a*b, Not(0 == a))),
    0 <= b)[0m
> Query: 1
> Duration: 35771
---> DONE <---
> Pre of `ERC20.decreaseAllowance(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20.decreaseAllowance(address,uint256)` is [33mAnd(_allowances[msg.sender][spender] >= subtractedValue,
    Not(0 == msg.sender),
    Not(0 == spender))[0m
> Query: 1
> Duration: 41857
---> DONE <---
> Post of `ERC20.decreaseAllowance(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20.decreaseAllowance(address,uint256)` is [33mAnd(<null>,
    0 <= subtractedValue,
    Not(0 == spender),
    Not(0 == msg.sender),
    old__allowances[msg.sender][spender] >= subtractedValue,
    _allowances[msg.sender][spender] ==
    old__allowances[msg.sender][spender] +
    -1*subtractedValue)[0m
> Query: 1
> Duration: 49707
---> DONE <---
> Pre of `ERC20._transfer(address,address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20._transfer(address,address,uint256)` is [33mAnd(_balances[sender] >= amount,
    Or(Not(sender == recipient),
       _balances[recipient] == _balances[sender] + -1*amount))[0m
> Query: 1
> Duration: 54155
---> DONE <---
> Post of `ERC20._transfer(address,address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20._transfer(address,address,uint256)` is [33mAnd(Not(0 == recipient),
    Not(0 == sender),
    0 <= amount,
    old__balances[sender] >= amount,
    Or(And(_balances[sender] == old__balances[sender],
           recipient == sender,
           sender == recipient),
       And(Not(recipient == sender),
           _balances[sender] ==
           old__balances[sender] + -1*amount,
           _balances[recipient] ==
           old__balances[recipient] + amount)),
    Not(sender == recipient))[0m
> Query: 1
> Duration: 60019
---> DONE <---
> Pre of `ERC20.transferFrom(address,address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20.transferFrom(address,address,uint256)` is [33mAnd(_balances[sender] >= amount,
    Not(0 == sender),
    Not(0 == recipient),
    Not(sender == recipient),
    Not(-1*amount + _allowances[sender][msg.sender] <= -1),
    Not(sender == 0),
    Not(msg.sender == 0))[0m
> Query: 1
> Duration: 100809
---> DONE <---
> Post of `ERC20.transferFrom(address,address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20.transferFrom(address,address,uint256)` is [33mAnd(<null>,
    _balances[recipient] ==
    old__balances[recipient] + amount,
    _balances[sender] == old__balances[sender] + -1*amount,
    old__allowances[sender][msg.sender] >= amount,
    0 <= amount,
    old__balances[sender] >= amount,
    Not(0 == msg.sender),
    Not(0 == sender),
    _allowances[sender][msg.sender] ==
    old__allowances[sender][msg.sender] + -1*amount,
    Not(sender == recipient),
    Not(0 == recipient))[0m
> Query: 1
> Duration: 158020
---> DONE <---
> Pre of `SafeMath.add(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 159409
---> DONE <---
> Post of `SafeMath.add(uint256,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `SafeMath.add(uint256,uint256)` is [33mAnd(0 <= b, 0 <= a, r == a + b)[0m
> Query: 1
> Duration: 164114
---> DONE <---
> Pre of `ERC20._approve(address,address,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 164977
---> DONE <---
> Post of `ERC20._approve(address,address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20._approve(address,address,uint256)` is [33mAnd(_allowances[owner][spender] == value,
    Not(0 == owner),
    0 <= value,
    Not(0 == spender))[0m
> Query: 1
> Duration: 167836
---> DONE <---
> Pre of `ERC20.balanceOf(address)` is [33mTrue[0m
[]
> Query: 0
> Duration: 168558
---> DONE <---
> Post of `ERC20.balanceOf(address)` is [33mFalse[0m
[['ERC20.balanceOf(address)']]
> Post of `ERC20.balanceOf(address)` is [33mr == _balances[account][0m
> Query: 1
> Duration: 169359
---> DONE <---
> Pre of `ERC20.totalSupply()` is [33mTrue[0m
[]
> Query: 0
> Duration: 170057
---> DONE <---
> Post of `ERC20.totalSupply()` is [33mFalse[0m
[['ERC20.totalSupply()']]
> Post of `ERC20.totalSupply()` is [33mAnd(r == _totalSupply, 0 <= _totalSupply)[0m
> Query: 1
> Duration: 170919
---> DONE <---
> Pre of `SafeMath.div(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 171620
---> DONE <---
> Post of `SafeMath.div(uint256,uint256)` is [33mFalse[0m
[['SafeMath.div(uint256,uint256)']]
> Post of `SafeMath.div(uint256,uint256)` is [33mAnd(Not(b <= 0), 0 <= a, r == a/b)[0m
> Query: 1
> Duration: 172575
---> DONE <---
> Pre of `TokenMintERC20Token.burn(uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `TokenMintERC20Token.burn(uint256)` is [33mAnd(_totalSupply >= value,
    _balances[msg.sender] >= value,
    Not(0 == msg.sender))[0m
> Query: 1
> Duration: 177545
---> DONE <---
> Post of `TokenMintERC20Token.burn(uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `TokenMintERC20Token.burn(uint256)` is [33mAnd(_balances[msg.sender] ==
    old__balances[msg.sender] + -1*value,
    _totalSupply == old__totalSupply + -1*value,
    0 <= value,
    old__balances[msg.sender] >= value,
    old__totalSupply >= value,
    Not(0 == msg.sender))[0m
> Query: 1
> Duration: 191221
---> DONE <---
> Pre of `SafeMath.sub(uint256,uint256)` is [33mTrue[0m
[]
> Query: 0
> Duration: 192292
---> DONE <---
> Post of `SafeMath.sub(uint256,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `SafeMath.sub(uint256,uint256)` is [33mAnd(b <= a, 0 <= b, r == a + -1*b)[0m
> Query: 1
> Duration: 195928
---> DONE <---
> Pre of `ERC20.approve(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20.approve(address,uint256)` is [33mAnd(Not(0 == msg.sender), Not(0 == spender))[0m
> Query: 1
> Duration: 200941
---> DONE <---
> Post of `ERC20.approve(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20.approve(address,uint256)` is [33mAnd(<null>,
    _allowances[msg.sender][spender] == value,
    0 <= value,
    Not(0 == spender),
    Not(0 == msg.sender))[0m
> Query: 1
> Duration: 206841
---> DONE <---
> Pre of `ERC20._burn(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20._burn(address,uint256)` is [33mAnd(_totalSupply >= value, _balances[account] >= value)[0m
> Query: 1
> Duration: 211938
---> DONE <---
> Post of `ERC20._burn(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20._burn(address,uint256)` is [33mAnd(Not(0 == account),
    0 <= old__totalSupply,
    0 <= value,
    old__balances[account] >= value,
    old__totalSupply >= value,
    _totalSupply == old__totalSupply + -1*value,
    _balances[account] == old__balances[account] + -1*value)[0m
> Query: 1
> Duration: 217962
---> DONE <---
> Pre of `TokenMintERC20Token.decimals()` is [33mTrue[0m
[]
> Query: 0
> Duration: 218878
---> DONE <---
> Post of `TokenMintERC20Token.decimals()` is [33mFalse[0m
[['TokenMintERC20Token.decimals()']]
> Post of `TokenMintERC20Token.decimals()` is [33mAnd(r == _decimals, 0 <= _decimals)[0m
> Query: 1
> Duration: 219892
---> DONE <---
> Pre of `TokenMintERC20Token.symbol()` is [33mTrue[0m
[]
> Query: 0
> Duration: 220809
---> DONE <---
> Post of `TokenMintERC20Token.symbol()` is [33mFalse[0m
[['TokenMintERC20Token.symbol()']]
> Post of `TokenMintERC20Token.symbol()` is [33mr == _symbol[0m
> Query: 1
> Duration: 222164
---> DONE <---
> Pre of `ERC20.increaseAllowance(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20.increaseAllowance(address,uint256)` is [33mAnd(Not(0 == msg.sender), Not(0 == spender))[0m
> Query: 1
> Duration: 227589
---> DONE <---
> Post of `ERC20.increaseAllowance(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20.increaseAllowance(address,uint256)` is [33mAnd(<null>,
    0 <= addedValue,
    Not(0 == spender),
    Not(0 == msg.sender),
    _allowances[msg.sender][spender] ==
    old__allowances[msg.sender][spender] + addedValue)[0m
> Query: 1
> Duration: 234708
---> DONE <---
> Pre of `ERC20._burnFrom(address,uint256)` is [33mTrue[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Pre of `ERC20._burnFrom(address,uint256)` is [33mAnd(_totalSupply >= amount,
    _balances[account] >= amount,
    Not(0 == account),
    Not(-1*amount + _allowances[account][msg.sender] <= -1),
    Not(account == 0),
    Not(msg.sender == 0))[0m
> Query: 1
> Duration: 244466
---> DONE <---
> Post of `ERC20._burnFrom(address,uint256)` is [33mFalse[0m
[['SafeMath.sub(uint256,uint256)', 'SafeMath.add(uint256,uint256)', 'ERC20._burn(address,uint256)', 'ERC20._mint(address,uint256)', 'ERC20._approve(address,address,uint256)', 'ERC20._transfer(address,address,uint256)', 'TokenMintERC20Token.burn(uint256)', 'TokenMintERC20Token.constructor(string,string,uint8,uint256,address,address)', 'ERC20._burnFrom(address,uint256)', 'ERC20.decreaseAllowance(address,uint256)', 'ERC20.increaseAllowance(address,uint256)', 'ERC20.transferFrom(address,address,uint256)', 'ERC20.approve(address,uint256)', 'ERC20.transfer(address,uint256)']]
> Post of `ERC20._burnFrom(address,uint256)` is [33mAnd(_balances[account] == old__balances[account] + -1*amount,
    _totalSupply == old__totalSupply + -1*amount,
    0 <= amount,
    old__allowances[account][msg.sender] >= amount,
    old__balances[account] >= amount,
    old__totalSupply >= amount,
    Not(0 == msg.sender),
    Not(0 == account),
    _allowances[account][msg.sender] ==
    old__allowances[account][msg.sender] + -1*amount)[0m
> Query: 1
> Duration: 265365
---> DONE <---
